#07_function.py
#함수, method, function
#함수 : 기능을 가지고 있는 것

#콘솔(CMD)창에 출력하는 기능 print()

#test    : 변수
#test()  : 함수

"""
    사용자 정의 함수
    -> 1) 매개변수(parameter)가 있는지?
    -> 2) 리턴(return)값이 있는지?

    - 함수정의 및 함수호출

    - 함수선언 형식) def 함수이름():
                        처리할명령어1
                        처리할명령어2
                        처리할명령어3

    - 식별자(변수명, 함수명, 모듈명, 클래스명) 작성 규칙
      -> 한글 사용불가
      -> 첫글자로 숫자는 사용불가
      -> 이름에 의미 부여해서 작성
"""
#===========================================================
"""
#함수정의(작성)
def hello():
    print('HELLO~~')
    print('PYTHON!!')


#함수호출
hello()
hello()
hello()
"""
#===========================================================

##1)매개변수가 없는 경우
def test1():
    print('Python!!')

test1()  #함수호출


##2)매개변수가 있는 경우
def test2(x):
    y=x+1
    style="test2({0}) => {0} + 1 = {1}"
    print(style.format(x,y))

test2(10) #함수호출
test2(20)
test2(30)


##3)매개변수가 2개 이상 있는 경우
def test3(x, y):
    z=x+y
    style = "test2({0},{1}) => {0} + {1} = {2}"
    print(style.format(x, y, z))

test3(50, 60)
test3(70, 80)
test3(90, 100)


##4)매개변수에 초기값 설정하기
###-> 뒤에서 부터 설정 가능하다
###-> test4(x, y=0, z)와 같은 형태는 에러
def test4(x, y, z=0):
    style = "sum({0}+{1}+{2}) => {0} + {1} + {2} = {3}"
    print(style.format(x, y, z , x+y+z))

test4(10, 20, 30)
test4(80, 90)   #-> z값 설정 안되있으므로 def~~에 설정된 z=0 값으로 적용됨

print('-'*30)


"""
밑에꺼... 리턴값 있는경우 : 이거 리턴값이 왜 필요한건데...? 없으나 마나 한거 아니야??
"""
##5)리턴값이 있는 경우
###-> 함수는 호출한 곳으로 다시 되돌아 오고, 되돌아 올 때 값을 가지고 올 수 있다.
###-> 리턴값은 1개만 존재한다.
def plus(x, y):
    z=x+y
    return z    # z값을 반환


result=plus(10, 30)
print(result)

print(plus(20, 40))

su=50+plus(6, 7)
print(su)

#예) 수학 관련 내장 함수
print(abs(-3))      #절대값 3 변환
print(max(1,3,5))   #최대값 5 변환
#===============================================================================
print('-'*30)

##6) return 문을 중간에 만나는 경우
###-> 함수에서 수행할 명령어가 남아 있어도 return 시점에서 되돌아 간다.
def test5(x,y):
    if x<10 or y<10 : return 0
    z=x+y
    return z

print(test5(20, 30))
print(test5(4, 15))   #if문 ture이므로 return 0 출력, 
                      #3,4째줄 명령어 남아있어도 되돌아감(stop, 수행x)
#===============================================================================
print('-'*30)

##7) 변수의 유효범위(SCOPE)
def test6(a, b):
    c=a+b
    print(c)

test6(1, 9)

"""
하기 print값은 에러. 함수내에서 선언한 변수(a, b, c)는 함수 내에서만 생존
print(a)  -> name 'a' is not defined
print(b)
print(c)
"""





